(   0) nprocs =   24 nprow =    1 npcol =   24 myrow =    0 mycol =    0
(   1) nprocs =   24 nprow =    1 npcol =   24 myrow =    0 mycol =    1
(   2) nprocs =   24 nprow =    1 npcol =   24 myrow =    0 mycol =    2
(   3) nprocs =   24 nprow =    1 npcol =   24 myrow =    0 mycol =    3
(   4) nprocs =   24 nprow =    1 npcol =   24 myrow =    0 mycol =    4
(   5) nprocs =   24 nprow =    1 npcol =   24 myrow =    0 mycol =    5
(  11) nprocs =   24 nprow =    1 npcol =   24 myrow =    0 mycol =   11
(  12) nprocs =   24 nprow =    1 npcol =   24 myrow =    0 mycol =   12
(  13) nprocs =   24 nprow =    1 npcol =   24 myrow =    0 mycol =   13
(  14) nprocs =   24 nprow =    1 npcol =   24 myrow =    0 mycol =   14
(  15) nprocs =   24 nprow =    1 npcol =   24 myrow =    0 mycol =   15
(  16) nprocs =   24 nprow =    1 npcol =   24 myrow =    0 mycol =   16
(   6) nprocs =   24 nprow =    1 npcol =   24 myrow =    0 mycol =    6
(  17) nprocs =   24 nprow =    1 npcol =   24 myrow =    0 mycol =   17
(  18) nprocs =   24 nprow =    1 npcol =   24 myrow =    0 mycol =   18
(  19) nprocs =   24 nprow =    1 npcol =   24 myrow =    0 mycol =   19
(   7) nprocs =   24 nprow =    1 npcol =   24 myrow =    0 mycol =    7
(  20) nprocs =   24 nprow =    1 npcol =   24 myrow =    0 mycol =   20
(  21) nprocs =   24 nprow =    1 npcol =   24 myrow =    0 mycol =   21
(  22) nprocs =   24 nprow =    1 npcol =   24 myrow =    0 mycol =   22
(   8) nprocs =   24 nprow =    1 npcol =   24 myrow =    0 mycol =    8
(  23) nprocs =   24 nprow =    1 npcol =   24 myrow =    0 mycol =   23
(   9) nprocs =   24 nprow =    1 npcol =   24 myrow =    0 mycol =    9
(  10) nprocs =   24 nprow =    1 npcol =   24 myrow =    0 mycol =   10
(   0) ndata_all = 528506 ndata_avg = 22022 ndata = 22022 ndata_s = 0 ndata_e = 22021 mp = 22022
(   0) nmax = 60 npara_all = 3721 npara_avg = 156 npara = 156 npara_s = 0 npara_e = 155
(   0) index  check: int_lim ~= 0.076316G < INT_LIM (2G) : safe~~~
(   0) memory check: mem_lim ~= 0.654231G < MEM_LIM (4G) : safe~~~
(   1) ndata_all = 528506 ndata_avg = 22022 ndata = 22022 ndata_s = 22022 ndata_e = 44043 mp = 22022
(   2) ndata_all = 528506 ndata_avg = 22022 ndata = 22022 ndata_s = 44044 ndata_e = 66065 mp = 22022
(   2) nmax = 60 npara_all = 3721 npara_avg = 156 npara = 156 npara_s = 312 npara_e = 467
(   2) index  check: int_lim ~= 0.076316G < INT_LIM (2G) : safe~~~
(   2) memory check: mem_lim ~= 0.654231G < MEM_LIM (4G) : safe~~~
(   3) ndata_all = 528506 ndata_avg = 22022 ndata = 22022 ndata_s = 66066 ndata_e = 88087 mp = 22022
(   3) nmax = 60 npara_all = 3721 npara_avg = 156 npara = 156 npara_s = 468 npara_e = 623
(   3) index  check: int_lim ~= 0.076316G < INT_LIM (2G) : safe~~~
(   3) memory check: mem_lim ~= 0.654231G < MEM_LIM (4G) : safe~~~
(   4) ndata_all = 528506 ndata_avg = 22022 ndata = 22022 ndata_s = 88088 ndata_e = 110109 mp = 22022
(   4) nmax = 60 npara_all = 3721 npara_avg = 156 npara = 156 npara_s = 624 npara_e = 779
(   4) index  check: int_lim ~= 0.076316G < INT_LIM (2G) : safe~~~
(   4) memory check: mem_lim ~= 0.654231G < MEM_LIM (4G) : safe~~~
(   5) ndata_all = 528506 ndata_avg = 22022 ndata = 22022 ndata_s = 110110 ndata_e = 132131 mp = 22022
(   5) nmax = 60 npara_all = 3721 npara_avg = 156 npara = 156 npara_s = 780 npara_e = 935
(   5) index  check: int_lim ~= 0.076316G < INT_LIM (2G) : safe~~~
(   5) memory check: mem_lim ~= 0.654231G < MEM_LIM (4G) : safe~~~
(   1) nmax = 60 npara_all = 3721 npara_avg = 156 npara = 156 npara_s = 156 npara_e = 311
(   1) index  check: int_lim ~= 0.076316G < INT_LIM (2G) : safe~~~
(   1) memory check: mem_lim ~= 0.654231G < MEM_LIM (4G) : safe~~~
(  11) ndata_all = 528506 ndata_avg = 22022 ndata = 22022 ndata_s = 242242 ndata_e = 264263 mp = 22022
(  11) nmax = 60 npara_all = 3721 npara_avg = 156 npara = 156 npara_s = 1716 npara_e = 1871
(  11) index  check: int_lim ~= 0.076316G < INT_LIM (2G) : safe~~~
(  11) memory check: mem_lim ~= 0.654231G < MEM_LIM (4G) : safe~~~
(   6) ndata_all = 528506 ndata_avg = 22022 ndata = 22022 ndata_s = 132132 ndata_e = 154153 mp = 22022
(   6) nmax = 60 npara_all = 3721 npara_avg = 156 npara = 156 npara_s = 936 npara_e = 1091
(   6) index  check: int_lim ~= 0.076316G < INT_LIM (2G) : safe~~~
(   6) memory check: mem_lim ~= 0.654231G < MEM_LIM (4G) : safe~~~
(   7) ndata_all = 528506 ndata_avg = 22022 ndata = 22022 ndata_s = 154154 ndata_e = 176175 mp = 22022
(   7) nmax = 60 npara_all = 3721 npara_avg = 156 npara = 156 npara_s = 1092 npara_e = 1247
(   7) index  check: int_lim ~= 0.076316G < INT_LIM (2G) : safe~~~
(   7) memory check: mem_lim ~= 0.654231G < MEM_LIM (4G) : safe~~~
(   8) ndata_all = 528506 ndata_avg = 22022 ndata = 22022 ndata_s = 176176 ndata_e = 198197 mp = 22022
(   9) ndata_all = 528506 ndata_avg = 22022 ndata = 22022 ndata_s = 198198 ndata_e = 220219 mp = 22022
(   9) nmax = 60 npara_all = 3721 npara_avg = 156 npara = 156 npara_s = 1404 npara_e = 1559
(   9) index  check: int_lim ~= 0.076316G < INT_LIM (2G) : safe~~~
(   9) memory check: mem_lim ~= 0.654231G < MEM_LIM (4G) : safe~~~
(  10) ndata_all = 528506 ndata_avg = 22022 ndata = 22022 ndata_s = 220220 ndata_e = 242241 mp = 22022
(  10) nmax = 60 npara_all = 3721 npara_avg = 156 npara = 156 npara_s = 1560 npara_e = 1715
(  10) index  check: int_lim ~= 0.076316G < INT_LIM (2G) : safe~~~
(  10) memory check: mem_lim ~= 0.654231G < MEM_LIM (4G) : safe~~~
(   8) nmax = 60 npara_all = 3721 npara_avg = 156 npara = 156 npara_s = 1248 npara_e = 1403
(   8) index  check: int_lim ~= 0.076316G < INT_LIM (2G) : safe~~~
(   8) memory check: mem_lim ~= 0.654231G < MEM_LIM (4G) : safe~~~
(  12) ndata_all = 528506 ndata_avg = 22022 ndata = 22022 ndata_s = 264264 ndata_e = 286285 mp = 22022
(  13) ndata_all = 528506 ndata_avg = 22022 ndata = 22022 ndata_s = 286286 ndata_e = 308307 mp = 22022
(  14) ndata_all = 528506 ndata_avg = 22022 ndata = 22022 ndata_s = 308308 ndata_e = 330329 mp = 22022
(  15) ndata_all = 528506 ndata_avg = 22022 ndata = 22022 ndata_s = 330330 ndata_e = 352351 mp = 22022
(  15) nmax = 60 npara_all = 3721 npara_avg = 156 npara = 156 npara_s = 2340 npara_e = 2495
(  15) index  check: int_lim ~= 0.076316G < INT_LIM (2G) : safe~~~
(  15) memory check: mem_lim ~= 0.654231G < MEM_LIM (4G) : safe~~~
(  16) ndata_all = 528506 ndata_avg = 22022 ndata = 22022 ndata_s = 352352 ndata_e = 374373 mp = 22022
(  16) nmax = 60 npara_all = 3721 npara_avg = 156 npara = 156 npara_s = 2496 npara_e = 2651
(  16) index  check: int_lim ~= 0.076316G < INT_LIM (2G) : safe~~~
(  16) memory check: mem_lim ~= 0.654231G < MEM_LIM (4G) : safe~~~
(  17) ndata_all = 528506 ndata_avg = 22022 ndata = 22022 ndata_s = 374374 ndata_e = 396395 mp = 22022
(  17) nmax = 60 npara_all = 3721 npara_avg = 156 npara = 156 npara_s = 2652 npara_e = 2807
(  17) index  check: int_lim ~= 0.076316G < INT_LIM (2G) : safe~~~
(  17) memory check: mem_lim ~= 0.654231G < MEM_LIM (4G) : safe~~~
(  18) ndata_all = 528506 ndata_avg = 22022 ndata = 22022 ndata_s = 396396 ndata_e = 418417 mp = 22022
(  18) nmax = 60 npara_all = 3721 npara_avg = 156 npara = 156 npara_s = 2808 npara_e = 2963
(  18) index  check: int_lim ~= 0.076316G < INT_LIM (2G) : safe~~~
(  18) memory check: mem_lim ~= 0.654231G < MEM_LIM (4G) : safe~~~
(  19) ndata_all = 528506 ndata_avg = 22022 ndata = 22022 ndata_s = 418418 ndata_e = 440439 mp = 22022
(  19) nmax = 60 npara_all = 3721 npara_avg = 156 npara = 156 npara_s = 2964 npara_e = 3119
(  19) index  check: int_lim ~= 0.076316G < INT_LIM (2G) : safe~~~
(  19) memory check: mem_lim ~= 0.654231G < MEM_LIM (4G) : safe~~~
(  20) ndata_all = 528506 ndata_avg = 22022 ndata = 22022 ndata_s = 440440 ndata_e = 462461 mp = 22022
(  20) nmax = 60 npara_all = 3721 npara_avg = 156 npara = 156 npara_s = 3120 npara_e = 3275
(  20) index  check: int_lim ~= 0.076316G < INT_LIM (2G) : safe~~~
(  20) memory check: mem_lim ~= 0.654231G < MEM_LIM (4G) : safe~~~
(  21) ndata_all = 528506 ndata_avg = 22022 ndata = 22022 ndata_s = 462462 ndata_e = 484483 mp = 22022
(  21) nmax = 60 npara_all = 3721 npara_avg = 156 npara = 156 npara_s = 3276 npara_e = 3431
(  21) index  check: int_lim ~= 0.076316G < INT_LIM (2G) : safe~~~
(  21) memory check: mem_lim ~= 0.654231G < MEM_LIM (4G) : safe~~~
(  22) ndata_all = 528506 ndata_avg = 22022 ndata = 22022 ndata_s = 484484 ndata_e = 506505 mp = 22022
(  22) nmax = 60 npara_all = 3721 npara_avg = 156 npara = 156 npara_s = 3432 npara_e = 3587
(  22) index  check: int_lim ~= 0.076316G < INT_LIM (2G) : safe~~~
(  22) memory check: mem_lim ~= 0.654231G < MEM_LIM (4G) : safe~~~
(  23) ndata_all = 528506 ndata_avg = 22022 ndata = 22000 ndata_s = 506506 ndata_e = 528505 mp = 22000
(  23) nmax = 60 npara_all = 3721 npara_avg = 156 npara = 133 npara_s = 3588 npara_e = 3720
(  23) index  check: int_lim ~= 0.076240G < INT_LIM (2G) : safe~~~
(  23) memory check: mem_lim ~= 0.652983G < MEM_LIM (4G) : safe~~~
(  12) nmax = 60 npara_all = 3721 npara_avg = 156 npara = 156 npara_s = 1872 npara_e = 2027
(  12) index  check: int_lim ~= 0.076316G < INT_LIM (2G) : safe~~~
(  12) memory check: mem_lim ~= 0.654231G < MEM_LIM (4G) : safe~~~
(  13) nmax = 60 npara_all = 3721 npara_avg = 156 npara = 156 npara_s = 2028 npara_e = 2183
(  13) index  check: int_lim ~= 0.076316G < INT_LIM (2G) : safe~~~
(  13) memory check: mem_lim ~= 0.654231G < MEM_LIM (4G) : safe~~~
(  14) nmax = 60 npara_all = 3721 npara_avg = 156 npara = 156 npara_s = 2184 npara_e = 2339
(  14) index  check: int_lim ~= 0.076316G < INT_LIM (2G) : safe~~~
(  14) memory check: mem_lim ~= 0.654231G < MEM_LIM (4G) : safe~~~
(   7)     2: seconds of initialization and scan data
(   8)     2: seconds of initialization and scan data
(   9)     2: seconds of initialization and scan data
(  10)     2: seconds of initialization and scan data
(  11)     2: seconds of initialization and scan data
(   6)     2: seconds of initialization and scan data
(  18)     2: seconds of initialization and scan data
(  19)     2: seconds of initialization and scan data
(  20)     2: seconds of initialization and scan data
(  21)     2: seconds of initialization and scan data
(  22)     2: seconds of initialization and scan data
(  23)     2: seconds of initialization and scan data
(  13)     2: seconds of initialization and scan data
(  16)     2: seconds of initialization and scan data
(  17)     2: seconds of initialization and scan data
(  15)     2: seconds of initialization and scan data
(  12)     2: seconds of initialization and scan data
(  14)     2: seconds of initialization and scan data
(   1)     2: seconds of initialization and scan data
(   2)     2: seconds of initialization and scan data
(   3)     2: seconds of initialization and scan data
(   4)     2: seconds of initialization and scan data
(   5)     2: seconds of initialization and scan data
(   0)     2: seconds of initialization and scan data
(  11)     4: seconds of processing gravity and partial
(  10)     4: seconds of processing gravity and partial
(   9)     5: seconds of processing gravity and partial
(   7)     5: seconds of processing gravity and partial
(   8)     5: seconds of processing gravity and partial
(   6)     5: seconds of processing gravity and partial
(  23)     5: seconds of processing gravity and partial
(  19)     5: seconds of processing gravity and partial
(  21)     5: seconds of processing gravity and partial
(  17)     5: seconds of processing gravity and partial
(  15)     5: seconds of processing gravity and partial
(  20)     5: seconds of processing gravity and partial
(  22)     5: seconds of processing gravity and partial
(  13)     5: seconds of processing gravity and partial
(  16)     5: seconds of processing gravity and partial
(  18)     5: seconds of processing gravity and partial
(  12)     5: seconds of processing gravity and partial
(  14)     5: seconds of processing gravity and partial
(   3)     5: seconds of processing gravity and partial
(   5)     5: seconds of processing gravity and partial
(   4)     5: seconds of processing gravity and partial
(   0)     5: seconds of processing gravity and partial
(   1)     5: seconds of processing gravity and partial
(   2)     5: seconds of processing gravity and partial
(  11)    56: seconds of finish ATPA&ATPY
(   9)    55: seconds of finish ATPA&ATPY
(   7)    55: seconds of finish ATPA&ATPY
(   5)    55: seconds of finish ATPA&ATPY
(   3)    55: seconds of finish ATPA&ATPY
(   1)    55: seconds of finish ATPA&ATPY
(  13)    55: seconds of finish ATPA&ATPY
(  15)    55: seconds of finish ATPA&ATPY
(   0)    55: seconds of finish ATPA&ATPY
(  12)    55: seconds of finish ATPA&ATPY
(   2)    55: seconds of finish ATPA&ATPY
(  14)    55: seconds of finish ATPA&ATPY
(   4)    55: seconds of finish ATPA&ATPY
(  16)    55: seconds of finish ATPA&ATPY
(   6)    55: seconds of finish ATPA&ATPY
(  17)    55: seconds of finish ATPA&ATPY
(  18)    55: seconds of finish ATPA&ATPY
(  19)    55: seconds of finish ATPA&ATPY
(  20)    55: seconds of finish ATPA&ATPY
(  21)    55: seconds of finish ATPA&ATPY
(  22)    55: seconds of finish ATPA&ATPY
(   8)    55: seconds of finish ATPA&ATPY
(  23)    55: seconds of finish ATPA&ATPY
(  10)    56: seconds of finish ATPA&ATPY
(   0)     1: seconds of inverting N
OUTPUT: 2006-05.mvf.l1c.60.DMA.L2
(   0)     0: seconds of output data

Normal end of ECHO!

press any key to finish...
n0617: cp: cannot stat `*.L2': No such file or directory
Job Id: 2792742.oak-batch.osc.edu
    Job_Name = L2solver.DMA.scr

-----------------------
Resources requested:
nodes=2:ppn=12
-----------------------
Resources used:
cput=00:24:48
walltime=00:01:13
mem=9.014 GB
vmem=14.227 GB
-----------------------
Resource units charged (estimate):
0.048 RUs
-----------------------
Estimated RU charges under proposed new accounting policy:
0.048 RUs
See http://osc.edu/memcharging for more information.
-----------------------
